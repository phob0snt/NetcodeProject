//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Relay.Http;



namespace Unity.Services.Relay.Models
{
    /// <summary>
    /// A request to create an allocation.
    /// </summary>
    [Preserve]
    [DataContract(Name = "AllocationRequest")]
    public class AllocationRequest
    {
        /// <summary>
        /// A request to create an allocation.
        /// </summary>
        /// <param name="maxConnections">The maximum number of peer connections allowed for this allocation. The Allocations service also uses this number to find a Relay with sufficient capacity.</param>
        /// <param name="region">The region in which to create this allocation.  Get a list of supported values from the &#x60;/regions&#x60; endpoint or omit this parameter to use the default region.</param>
        [Preserve]
        public AllocationRequest(int maxConnections, string region = default)
        {
            MaxConnections = maxConnections;
            Region = region;
        }

        /// <summary>
        /// The maximum number of peer connections allowed for this allocation. The Allocations service also uses this number to find a Relay with sufficient capacity.
        /// </summary>
        [Preserve]
        [DataMember(Name = "maxConnections", IsRequired = true, EmitDefaultValue = true)]
        public int MaxConnections{ get; }
        
        /// <summary>
        /// The region in which to create this allocation.  Get a list of supported values from the &#x60;/regions&#x60; endpoint or omit this parameter to use the default region.
        /// </summary>
        [Preserve]
        [DataMember(Name = "region", EmitDefaultValue = false)]
        public string Region{ get; }
    
        /// <summary>
        /// Formats a AllocationRequest into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            serializedModel += "maxConnections," + MaxConnections.ToString() + ",";
            if (Region != null)
            {
                serializedModel += "region," + Region;
            }
            return serializedModel;
        }

        /// <summary>
        /// Returns a AllocationRequest as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            var maxConnectionsStringValue = MaxConnections.ToString();
            dictionary.Add("maxConnections", maxConnectionsStringValue);
            
            if (Region != null)
            {
                var regionStringValue = Region.ToString();
                dictionary.Add("region", regionStringValue);
            }
            
            return dictionary;
        }
    }
}
